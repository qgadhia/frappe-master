services:
  backend:
    image: $DOCKER_REGISTRY_URL/$DOCKER_IMAGE_NAME:$CI_COMMIT_SHA
    networks:
      - frappe_network
    deploy:
      restart_policy:
        condition: on-failure
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
    environment:
      DB_HOST: $DB_HOST
      DB_PORT: $DB_PORT

  configurator:
    image: $DOCKER_REGISTRY_URL/$DOCKER_IMAGE_NAME:$CI_COMMIT_SHA
    networks:
      - frappe_network
    deploy:
      restart_policy:
        condition: none
    entrypoint:
      - bash
      - -c
    command:
      - >
        ls -1 apps > sites/apps.txt;
        bench set-config -g db_host $$DB_HOST;
        bench set-config -gp db_port $$DB_PORT;
        bench set-config -g redis_cache "redis://$$REDIS_CACHE";
        bench set-config -g redis_queue "redis://$$REDIS_QUEUE";
        bench set-config -g redis_socketio "redis://$$REDIS_SOCKETIO";
        bench set-config -gp socketio_port $$SOCKETIO_PORT;
        echo "bench configured";
    environment:
      DB_HOST: $DB_HOST
      DB_PORT: $DB_PORT
      REDIS_CACHE: $REDIS_CACHE
      REDIS_QUEUE: $REDIS_QUEUE
      REDIS_SOCKETIO: $REDIS_SOCKETIO
      SOCKETIO_PORT: "9000"
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs

  create-site:
    image: $DOCKER_REGISTRY_URL/$DOCKER_IMAGE_NAME:$CI_COMMIT_SHA
    networks:
      - frappe_network
    deploy:
      restart_policy:
        condition: none
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
    entrypoint:
      - bash
      - -c
    environment:
      SITE_NAME: ${SITE_NAME}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      DB_ROOT_USERNAME: ${DB_ROOT_USERNAME}
      DB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    command: 
      - >
        export start=$(date +%s);
        until [[ -n $(grep -hs ^ sites/common_site_config.json | jq -r ".db_host // empty") ]] && 
              [[ -n $(grep -hs ^ sites/common_site_config.json | jq -r ".redis_cache // empty") ]] && 
              [[ -n $(grep -hs ^ sites/common_site_config.json | jq -r ".redis_queue // empty") ]]; 
        do 
           sleep 5; 
        done;
        bench new-site $SITE_NAME --db-host 192.168.20.122 --db-port 3306 --admin-password admin@123 --db-root-username root --db-root-password maria@123 --db-user indosoltm --db-name indosoltm --force; 
        echo "Site Created Successfully";
        bench use $SITE_NAME;
        bench --site $SITE_NAME install-app erpnext;
        bench --site $SITE_NAME install-app hrms;
        echo "migration start";
        bench --site $SITE_NAME migrate;
        echo "migration complete";
        bench --site $SITE_NAME install-app whitelabel;
        bench --site $SITE_NAME install-app frappe_s3_attachment;
        echo "building for prod";
        bench build --production;
        echo "build complete";

  frontend:
    image: $DOCKER_REGISTRY_URL/$DOCKER_IMAGE_NAME:$CI_COMMIT_SHA
    networks:
      - frappe_network
    depends_on:
      - websocket
    deploy:
      restart_policy:
        condition: on-failure
    command:
      - nginx-entrypoint.sh
    environment:
      BACKEND: backend:8000
      FRAPPE_SITE_NAME_HEADER: $SITE_NAME
      SOCKETIO: websocket:9000
      UPSTREAM_REAL_IP_ADDRESS: $SSH_KNOWN_HOSTS
      UPSTREAM_REAL_IP_HEADER: X-Forwarded-For
      UPSTREAM_REAL_IP_RECURSIVE: "off"
      PROXY_READ_TIMEOUT: 120
      CLIENT_MAX_BODY_SIZE: 50m
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs

  queue-long:
    image: $DOCKER_REGISTRY_URL/$DOCKER_IMAGE_NAME:$CI_COMMIT_SHA
    networks:
      - frappe_network
    deploy:
      restart_policy:
        condition: on-failure
    command:
      - bench
      - worker
      - --queue
      - long,default,short
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs

  queue-short:
    image: $DOCKER_REGISTRY_URL/$DOCKER_IMAGE_NAME:$CI_COMMIT_SHA
    networks:
      - frappe_network
    deploy:
      restart_policy:
        condition: on-failure
    command:
      - bench
      - worker
      - --queue
      - short,default
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs

  scheduler:
    image: $DOCKER_REGISTRY_URL/$DOCKER_IMAGE_NAME:$CI_COMMIT_SHA
    networks:
      - frappe_network
    deploy:
      restart_policy:
        condition: on-failure
    command:
      - bench
      - schedule
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs

  websocket:
    image: $DOCKER_REGISTRY_URL/$DOCKER_IMAGE_NAME:$CI_COMMIT_SHA
    networks:
      - frappe_network
    deploy:
      restart_policy:
        condition: on-failure
    command:
      - node
      - /home/frappe/frappe-bench/apps/frappe/socketio.js
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs

  nginx:
    image: nginx:latest
    depends_on:
      - frontend
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./certs/fullchain.pem:/etc/nginx/certs/fullchain.pem
      - ./certs/privkey.pem:/etc/nginx/certs/privkey.pem
    networks:
      - frappe_network
    ports:
      - "8080:8080"



volumes:
  db-data:
  redis-queue-data:
  sites:
  logs:
  ssh:

networks:
  frappe_network:
    driver: bridge