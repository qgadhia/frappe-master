services:
  backend:
    image: $DOCKER_REGISTRY_URL/$DOCKER_IMAGE_NAME:$CI_COMMIT_SHA
    networks:
      - frappe_network
    restart: always
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
      - apps:/home/frappe/frappe-bench/apps
      - env:/home/frappe/frappe-bench/env
      - config:/home/frappe/frappe-bench/config
    environment:
      DB_HOST: $DB_HOST
      DB_PORT: $DB_PORT
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
    command:
      - bash
      - -c
      - >
        ( bench build --production && env PYTHONPATH=/home/frappe/frappe-bench/apps /home/frappe/frappe-bench/env/bin/gunicorn --chdir=/home/frappe/frappe-bench/sites --bind=0.0.0.0:8000 --threads=4 --workers=2 --worker-class=gthread --worker-tmp-dir=/dev/shm --timeout=120 --preload frappe.app:application ) > >(tee -a /home/frappe/frappe-bench/logs/gunicorn.log) 2>&1
    depends_on:
      redis-cache:
        condition: service_healthy
      redis-queue:
        condition: service_healthy
      create-site:
        condition: service_completed_successfully
    extra_hosts:
        localhost: 172.17.0.1

  configurator:
    image: $DOCKER_REGISTRY_URL/$DOCKER_IMAGE_NAME:$CI_COMMIT_SHA
    networks:
      - frappe_network
    deploy:
      restart_policy:
        condition: none
    entrypoint:
      - bash
      - -c
    command:
      - >
        ls -1 apps > sites/apps.txt;
        bench set-config -g db_host $$DB_HOST;
        bench set-config -gp db_port $$DB_PORT;
        bench set-config -g redis_cache "redis://$$REDIS_CACHE";
        bench set-config -g redis_queue "redis://$$REDIS_QUEUE";
        bench set-config -g redis_socketio "redis://$$REDIS_SOCKETIO";
        bench set-config -gp socketio_port $$SOCKETIO_PORT;
        bench set-config -g developer_mode 1;
        bench set-config -g server_script_enabled 1;
        echo "bench configured";
    environment:
      DB_HOST: $DB_HOST
      DB_PORT: $DB_PORT
      REDIS_CACHE: redis-cache:6379
      REDIS_QUEUE: redis-queue:6379
      REDIS_SOCKETIO: redis-cache:6379
      SOCKETIO_PORT: "9000"
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
      - apps:/home/frappe/frappe-bench/apps
      - env:/home/frappe/frappe-bench/env
      - config:/home/frappe/frappe-bench/config

  create-site:
    image: $DOCKER_REGISTRY_URL/$DOCKER_IMAGE_NAME:$CI_COMMIT_SHA
    networks:
      - frappe_network
    deploy:
      restart_policy:
        condition: none
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
      - apps:/home/frappe/frappe-bench/apps
      - env:/home/frappe/frappe-bench/env
      - config:/home/frappe/frappe-bench/config
    entrypoint:
      - bash
      - -c
    environment:
      SITE_NAME: ${SITE_NAME}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      DB_ROOT_USERNAME: ${DB_ROOT_USERNAME}
      DB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    command: 
      - >
        ( export start=$(date +%s);
        until [[ -n $(grep -hs ^ sites/common_site_config.json | jq -r ".db_host // empty") ]] && 
              [[ -n $(grep -hs ^ sites/common_site_config.json | jq -r ".redis_cache // empty") ]] && 
              [[ -n $(grep -hs ^ sites/common_site_config.json | jq -r ".redis_queue // empty") ]]; 
        do 
           sleep 5;
        done;
        bench new-site $SITE_NAME --db-host 10.7.57.139 --admin-password="$ADMIN_PASSWORD" --db-root-password="$DB_ROOT_PASSWORD" --db-user=indosoltm --db-name=indosoltm --db-password="$DB_PASSWORD";
        echo "Site Created Successfully";
        bench --site $SITE_NAME clear-cache;
        bench use $SITE_NAME;
        cd apps/frappe;
        git pull;
        cd ../erpnext;
        git pull;
        cd ../whitelabel;
        git pull;
        bench --site $SITE_NAME install-app erpnext;
        bench --site $SITE_NAME install-app whitelabel;
        bench --site $SITE_NAME clear-cache;
        echo "Migration Start";
        bench --site $SITE_NAME migrate;
        echo "Migration Complete";
        echo "Building for Production";
        bench build --production;
        echo "Build Complete";  ) > >(tee -a /home/frappe/frappe-bench/logs/create-site.log) 2>&1

  frontend:
    image: $DOCKER_REGISTRY_URL/$DOCKER_IMAGE_NAME:$CI_COMMIT_SHA
    networks:
      - frappe_network
    depends_on:
      - websocket
    deploy:
      restart_policy:
        condition: on-failure
    command:
      - nginx-entrypoint.sh
    environment:
      BACKEND: backend:8000
      FRAPPE_SITE_NAME_HEADER: $SITE_NAME
      SOCKETIO: websocket:9000
      UPSTREAM_REAL_IP_ADDRESS: $SSH_KNOWN_HOSTS
      UPSTREAM_REAL_IP_HEADER: X-Forwarded-For
      UPSTREAM_REAL_IP_RECURSIVE: "off"
      PROXY_READ_TIMEOUT: 120
      CLIENT_MAX_BODY_SIZE: 50m
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
      - apps:/home/frappe/frappe-bench/apps
      - env:/home/frappe/frappe-bench/env
      - config:/home/frappe/frappe-bench/config
    ports:
      - "8080:8080"

  queue-long:
    image: $DOCKER_REGISTRY_URL/$DOCKER_IMAGE_NAME:$CI_COMMIT_SHA
    networks:
      - frappe_network
    deploy:
      restart_policy:
        condition: on-failure
    command:
      - bench
      - worker
      - --queue
      - long,default,short
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
      - apps:/home/frappe/frappe-bench/apps
      - env:/home/frappe/frappe-bench/env
      - config:/home/frappe/frappe-bench/config

  queue-short:
    image: $DOCKER_REGISTRY_URL/$DOCKER_IMAGE_NAME:$CI_COMMIT_SHA
    networks:
      - frappe_network
    deploy:
      restart_policy:
        condition: on-failure
    command:
      - bench
      - worker
      - --queue
      - short,default
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
      - apps:/home/frappe/frappe-bench/apps
      - env:/home/frappe/frappe-bench/env
      - config:/home/frappe/frappe-bench/config

  scheduler:
    image: $DOCKER_REGISTRY_URL/$DOCKER_IMAGE_NAME:$CI_COMMIT_SHA
    networks:
      - frappe_network
    deploy:
      restart_policy:
        condition: on-failure
    command:
      - bench
      - schedule
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
      - apps:/home/frappe/frappe-bench/apps
      - env:/home/frappe/frappe-bench/env
      - config:/home/frappe/frappe-bench/config

  websocket:
    image: $DOCKER_REGISTRY_URL/$DOCKER_IMAGE_NAME:$CI_COMMIT_SHA
    networks:
      - frappe_network
    deploy:
      restart_policy:
        condition: on-failure
    command:
      - node
      - /home/frappe/frappe-bench/apps/frappe/socketio.js
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
      - apps:/home/frappe/frappe-bench/apps
      - env:/home/frappe/frappe-bench/env
      - config:/home/frappe/frappe-bench/config

  redis-cache:
    image: redis:6.2-alpine
    networks:
      - frappe_network
    restart: always
    volumes:
      - logs:/home/frappe/frappe-bench/logs
    ports:
      - "13000:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: sh -c "redis-server --loglevel verbose | tee -a /home/frappe/frappe-bench/logs/redis-cache.log"
  
  redis-queue:
    image: redis:6.2-alpine
    networks:
      - frappe_network
    restart: always
    volumes:
      - logs:/home/frappe/frappe-bench/logs
    ports:
      - "11000:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: sh -c "redis-server --loglevel verbose | tee -a /home/frappe/frappe-bench/logs/redis-queue.log"

volumes:
  db-data:
  sites:
  logs:
  ssh:
  apps:
  env:
  config:

networks:
  frappe_network:
    driver: bridge
    name: frappe_network